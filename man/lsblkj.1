.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "lsblkj 1"
.TH lsblkj 1 "2021-06-03" "system-logger 0.5.4" "System Administration"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
lsblkj \- Report logged historic data using lsblk
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
lsblkj [options] [lsblk options] [device...]
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-debug\fR" 8
.IX Item "--debug"
Allow the environment variables \s-1LSBLK_PATH\s0 and \s-1JOURNALCTL_PATH\s0 to
override the hard-coded locations of the external lsblk and journalctl
binaries.  Do not delete the temporary directories and files when the
script exits.
.IP "\fB\-\-dry\-run\fR" 8
.IX Item "--dry-run"
Do not create the temporary files and directories the script requires
and do not call lsblk.
Useful with \-\-verbose to check the effect of your input data.
.IP "\fB\-\-file=\fR" 8
.IX Item "--file="
Read pre-filtered input from the named file instead of invoking journalctl 
directly.  Use \- to read from \s-1STDIN\s0.
.IP "\fB\-\-git\fR" 8
.IX Item "--git"
Create a git repository instead of running lsblk.  Device information is
stored in files in sub-directories modelled on /dev and /sys.  Each log
record is translated into a commit and tagged with a timestamp to make
it easier to examine the changes over time.
.IP "\fB\-\-help\fR" 8
.IX Item "--help"
Print a brief help message and exit.
.IP "\fB\-\-man\fR" 8
.IX Item "--man"
Print the manual page and exit.
.IP "\fB\-\-since=\fR" 8
.IX Item "--since="
Timestamp of the first journal record to use when reconstructing the system's
device configuration.  This will normally be a time when the machine was booted.
The basic time format is \*(L"YYYY-MM-DD \s-1HH:II:SS\s0\*(R" but for more details refer
to the man pages for \fIjournalctl\fR\|(1) and \fIsystemd.time\fR\|(7).
.IP "\fB\-\-until=\fR" 8
.IX Item "--until="
Timestamp of the last journal record to use when reconstructing the system's
device configuration.  Storage logging should have been running continuously
and the system should not have been rebooted between the time specified
with the \-\-since argument and this time. 
The basic time format is \*(L"YYYY-MM-DD \s-1HH:II:SS\s0\*(R" but for more details refer
to the man pages for \fIjournalctl\fR\|(1) and \fIsystemd.time\fR\|(7).
.IP "\fB\-\-verbose\fR" 8
.IX Item "--verbose"
Report the actions of the wrapper.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBlsblkj\fR reproduces the system's storage block device configuration at
a specified earlier time then uses lsblk to show you the result.  
You may use any of lsblk's options, but filesystem and mount point
information will rarely be accurate because the data is only sampled
when there is a change to the underlying block device.
.PP
The raw data can also be accessed directly using \fIjournalctl\fR\|(1).
For example, to find the major and minor number of the \s-1LVM\s0 Logical
Volume vg1/lvol0 across multiple reboot cycles you could use:
.PP
journalctl \-t \s-1UDEVLOG\s0 \-\-output verbose \-\-output\-fields=PERSISTENT_STORAGE_ID,MAJOR,MINOR PERSISTENT_STORAGE_ID=dm\-name\-vg1\-lvol0
.PP
Additional fields that lsblk does not show, such as device-mapper
tables (\s-1UDEVLOG_DM_TABLE_LIVE\s0), can be retrieved using this method.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIjournalctl\fR\|(1), 
\&\fIsystemd.time\fR\|(7),
\&\fIlsblk\fR\|(8)
.SH "AUTHOR"
.IX Header "AUTHOR"
Alasdair G. Kergon <agk@redhat.com>
.PP
Please send bug reports and suggestions to the linux-lvm mailing list linux\-lvm@redhat.com 
https://www.redhat.com/mailman/listinfo/linux\-lvm 
or use the web interface at https://github.com/lvmteam/storage\-logger
